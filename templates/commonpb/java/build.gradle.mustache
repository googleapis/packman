apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

description = 'Common protobufs used in Google APIs'
group = "io.gapi"
version = "0.0.0-SNAPSHOT"
// version = "{{api.semantic_version}}-SNAPSHOT"
// TODO: switch to this once all common protos are actually public

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
  mavenCentral()
  mavenLocal()
}

dependencies {
  compile "com.google.protobuf:protobuf-java:3.0.0-beta-2"
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar
}

signing {
  required false
  sign configurations.archives
}

uploadArchives.repositories.mavenDeployer {
 // url to the snapshot repository of a private maven repo.
  def privateSnapshotRepo = "http://104.197.230.53:8081/nexus/content/repositories/snapshots/"
  beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
  String stagingUrl
    if (rootProject.hasProperty('repositoryId')) {
      stagingUrl = 'https://oss.sonatype.org/service/local/staging/deployByRepositoryId/' +
          rootProject.repositoryId
    } else {
      stagingUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    }
  def configureAuth = {
    if (rootProject.hasProperty('ossrhUsername') && rootProject.hasProperty('ossrhPassword')) {
      authentication(userName: rootProject.ossrhUsername, password: rootProject.ossrhPassword)
    }
  }
  repository(url: stagingUrl, configureAuth)
  snapshotRepository(url: privateSnapshotRepo) {
    authentication(userName: privateOssrhUsername, password: privateOssrhPassword)
  }

  // snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/', configureAuth)
}

[
  install.repositories.mavenInstaller,
  uploadArchives.repositories.mavenDeployer,
]*.pom { pom ->
  pom.project {
    name "io.gapi:{{api.name}}"
    description project.description
    url '{{{api.homepage}}}'

    scm {
      connection 'scm:svn:https://github.com/google/googleapis.git'
      developerConnection 'scm:svn:git@github.com:google/googleapis.git'
      url 'https://github.com/google/googleapis'
    }

    licenses {
      license {
        name '{{api.license}}'
        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
     }
    }

    developers {
      developer {
        id "{{api.email}}"
        name "{{api.author}}"
        email "{{api.email}}"
        url "{{{api.homepage}}}"
        // https://issues.gradle.org/browse/GRADLE-2719
        organization = "Google, Inc."
        organizationUrl "https://www.google.com"
      }
    }
  }
}
